import telebot
import gspread
import json
import os
from oauth2client.service_account import ServiceAccountCredentials

# === –¢–û–ö–ï–ù –ë–û–¢–ê ===
BOT_TOKEN = os.environ.get("BOT_TOKEN", "8366428807:AAGqmjS8NdusUgWxDI2IWxV-gB1SChbm5_E")
bot = telebot.TeleBot(BOT_TOKEN)

# === GOOGLE –¢–ê–ë–õ–ò–¶–ê (—á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è) ===
try:
    creds_json = json.loads(os.environ["GOOGLE_CREDENTIALS"])
    SCOPE = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    CREDS = ServiceAccountCredentials.from_json_keyfile_dict(creds_json, SCOPE)
    CLIENT = gspread.authorize(CREDS)
    SHEET = CLIENT.open("–ê–∫–≤–∞—Ä–µ–ª—å - –ó–∞–ø–∏—Å–∏").sheet1  # ‚Üê –ó–∞–º–µ–Ω–∏ –Ω–∞ –∏–º—è —Ç–≤–æ–µ–π —Ç–∞–±–ª–∏—Ü—ã!
except Exception as e:
    print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google –¢–∞–±–ª–∏—Ü–µ:", e)
    SHEET = None

# === –°–û–°–¢–û–Ø–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô ===
user_state = {}

def main_menu():
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("üíÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", "‚ú® –£—Å–ª—É–≥–∏", "üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã")
    return markup

# === –°–¢–ê–†–¢ ===
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! üëã –≠—Ç–æ —Å—Ç—É–¥–∏—è –º–∞–Ω–∏–∫—é—Ä–∞ –∏ –ø–µ–¥–∏–∫—é—Ä–∞ *¬´–ê–∫–≤–∞—Ä–µ–ª—å¬ª* üíÖ\n\n"
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ö—Ä–∏—Å—Ç–∏–Ω–∞ ‚Äî —è –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ —Å–æ–±–æ–π!\n"
        "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
        reply_markup=main_menu(),
        parse_mode="Markdown"
    )

# === –£–°–õ–£–ì–ò ===
@bot.message_handler(func=lambda m: m.text == "‚ú® –£—Å–ª—É–≥–∏")
def services(message):
    bot.send_message(
        message.chat.id,
        "–£ –Ω–∞—Å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –≤—Å—ë –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ —Ä—É–∫–∞–º–∏ –∏ –Ω–æ–≥–∞–º–∏:\n\n"
        "‚Ä¢ *–ë–∞–∑–æ–≤—ã–π –º–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º* ‚Äî 1200 ‚ÇΩ\n"
        "‚Ä¢ *SPA-–ø–µ–¥–∏–∫—é—Ä —Å –∞—Ä–æ–º–∞–º–∞—Å–ª–∞–º–∏* ‚Äî 2200 ‚ÇΩ\n"
        "‚Ä¢ *–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ –≥–µ–ª—å-–ª–∞–∫–æ–º* ‚Äî –æ—Ç 1800 ‚ÇΩ\n"
        "‚Ä¢ *–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –Ω–æ–≥—Ç–µ–π* ‚Äî 1500 ‚ÇΩ\n\n"
        "–•–æ—á—É —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∑–∞—Ç—å ‚Äî –º–µ—Å—Ç–∞ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ —Ä–∞–∑–ª–µ—Ç–∞—é—Ç—Å—è –±—ã—Å—Ç—Ä–æ! üòä\n"
        "–ú–æ–∂–µ—Ç, –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —Å–≤–æ–±–æ–¥–Ω–æ?",
        reply_markup=telebot.types.ReplyKeyboardMarkup(resize_keyboard=True).add("üíÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"),
        parse_mode="Markdown"
    )

# === –ö–û–ù–¢–ê–ö–¢–´ ===
@bot.message_handler(func=lambda m: m.text == "üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã")
def contacts(message):
    bot.send_message(
        message.chat.id,
        "üìç *–ê–¥—Ä–µ—Å*: —É–ª. –¶–≤–µ—Ç–æ—á–Ω–∞—è, 15 (—Ä—è–¥–æ–º —Å –ø–∞—Ä–∫–æ–º)\n"
        "üìû *–¢–µ–ª–µ—Ñ–æ–Ω*: +7 (XXX) XXX-XX-XX\n"
        "üïí *–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã*: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10:00 –¥–æ 20:00\n\n"
        "–ú—ã –≤ Instagram: [@akvarel_nails](https://instagram.com/akvarel_nails)\n\n"
        "–ñ–¥—É –≤–∞—Å! üíñ",
        parse_mode="Markdown"
    )

# === –ù–ê–ß–ê–õ–û –ó–ê–ü–ò–°–ò ===
@bot.message_handler(func=lambda m: m.text == "üíÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
def book_start(message):
    bot.send_message(
        message.chat.id,
        "–û—Ç–ª–∏—á–Ω–æ! üíñ –î–∞–≤–∞–π—Ç–µ –ø–æ–¥–±–µ—Ä—ë–º —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è.\n"
        "–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?"
    )
    user_state[message.chat.id] = {"step": "name"}

# === –°–ë–û–† –î–ê–ù–ù–´–• ===
@bot.message_handler(func=lambda m: user_state.get(m.chat.id, {}).get("step") == "name")
def get_name(message):
    user_state[message.chat.id]["name"] = message.text.strip()
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–º–æ–∂–Ω–æ —Å +7):")
    user_state[message.chat.id]["step"] = "phone"

@bot.message_handler(func=lambda m: user_state.get(m.chat.id, {}).get("step") == "phone")
def get_phone(message):
    user_state[message.chat.id]["phone"] = message.text.strip()
    bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫—É—é –¥–∞—Ç—É —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è? (–ù–∞–ø—Ä–∏–º–µ—Ä: 15 –∏—é–Ω—è)")
    user_state[message.chat.id]["step"] = "date"

@bot.message_handler(func=lambda m: user_state.get(m.chat.id, {}).get("step") == "date")
def get_date(message):
    user_state[message.chat.id]["date"] = message.text.strip()
    bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è? (–ù–∞–ø—Ä–∏–º–µ—Ä: 14:30)")
    user_state[message.chat.id]["step"] = "time"

@bot.message_handler(func=lambda m: user_state.get(m.chat.id, {}).get("step") == "time")
def get_time(message):
    user_state[message.chat.id]["time"] = message.text.strip()
    bot.send_message(message.chat.id, "–ö–∞–∫–∞—è —É—Å–ª—É–≥–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?")
    user_state[message.chat.id]["step"] = "service"

@bot.message_handler(func=lambda m: user_state.get(m.chat.id, {}).get("step") == "service")
def get_service(message):
    chat_id = message.chat.id
    data = user_state[chat_id]
    data["service"] = message.text.strip()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Google –¢–∞–±–ª–∏—Ü—É
    success = False
    if SHEET:
        try:
            SHEET.append_row([
                data["date"],
                data["time"],
                data["name"],
                data["phone"],
                data["service"],
                "–ù–æ–≤–∞—è"
            ])
            success = True
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É:", e)

    if success:
        bot.send_message(
            chat_id,
            f"–ì–æ—Ç–æ–≤–æ! üí´\n"
            f"–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ *{data['date']} –≤ {data['time']}* –Ω–∞ *{data['service']}*.\n\n"
            f"–ó–∞ –¥–µ–Ω—å –Ω–∞–ø–æ–º–Ω—é ‚Äî –∏ –ø—Ä–∏—à–ª—é, –∫–∞–∫ –Ω–∞—Å –Ω–∞–π—Ç–∏ üìç\n"
            f"–ê –ø–æ–∫–∞ ‚Äî –æ—Ç–ª–∏—á–Ω–æ–≥–æ –≤–∞–º –¥–Ω—è! ‚ú®",
            parse_mode="Markdown"
        )
    else:
        bot.send_message(
            chat_id,
            "–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –∑–∞–ø–∏—Å—å—é... üòï\n"
            "–ù–æ —è –≤—Å—ë —Ä–∞–≤–Ω–æ –∑–∞–ø–æ–º–Ω–∏–ª–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É!\n"
            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É."
        )

    del user_state[chat_id]

# === –û–ë–†–ê–ë–û–¢–ö–ê –õ–Æ–ë–û–ì–û –¢–ï–ö–°–¢–ê (–º—è–≥–∫–∏–π –æ—Ç–≤–µ—Ç) ===
@bot.message_handler(func=lambda m: True)
def fallback(message):
    bot.send_message(
        message.chat.id,
        "–ù–µ —É–≤–µ—Ä–µ–Ω—ã, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å? üòä\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚Äî —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ!\n\n"
        "–ê –µ—â—ë –º–æ–≥—É –ø—Ä–∏—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ –Ω–∞—à–∏—Ö —Ä–∞–±–æ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏—Ç–µ ¬´–ü–æ–∫–∞–∂–∏¬ª!",
        reply_markup=main_menu()
    )

# === –ó–ê–ü–£–°–ö ===
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)
